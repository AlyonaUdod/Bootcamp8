'use strict'

/* 
  –ù–∞–ø–∏—à–∏—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è url –≤–µ–±-—Å—Ç—Ä–∞–Ω–∏—Ü –≤ –≤–∏–¥–µ –∫–∞—Ä—Ç–æ—á–µ–∫-–∑–∞–∫–ª–∞–¥–æ–∫. 
  
  –†–µ–∞–ª–∏–∑—É–π—Ç–µ —Å–ª–µ–¥—É—é—â–∏–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª:
    - –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ Gulp –¥–ª—è —Å–±–æ—Ä–∫–∏ –ø—Ä–æ–µ–∫—Ç–∞, JS –æ–±—Ä–∞–±–æ—Ç–∞–Ω —Ç—Ä–∞–Ω—Å–ø–∞–π–ª–µ—Ä–æ–º Babel, —Ä–µ—Å—É—Ä—Å—ã –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω—ã
    
    - –î–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–æ–≤–æ–π –∑–∞–∫–ª–∞–¥–∫–∏, –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –µ—Å—Ç—å —Ñ–æ—Ä–º–∞ —Å —ç–ª–µ–º–µ–Ω—Ç–æ–º input –∏ –∫–Ω–æ–ø–∫–æ–π "–î–æ–±–∞–≤–∏—Ç—å"
    
    - –í –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –µ—Å—Ç—å —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –¥–æ–±–∞–≤–ª–µ–Ω–Ω—ã—Ö –∫–∞—Ä—Ç–æ—á–µ–∫-–∑–∞–∫–ª–∞–¥–æ–∫, —Ä–∞—Å–ø–æ–ª–∞–≥–∞—é—â–∏–π—Å—è –ø–æ–¥ —Ñ–æ—Ä–º–æ–π
    
    - –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ —Å–æ–∑–¥–∞—é—Ç—Å—è –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —à–∞–±–ª–æ–Ω–∏–∑–∞—Ç–æ—Ä Handlebars –¥–ª—è
      —Å–æ–∑–¥–∞–Ω–∏—è —Å–ø–∏—Å–∫–∞ –∫–∞—Ä—Ç–æ—á–µ–∫. –§–æ—Ä–º–∞ —É–∂–µ –µ—Å—Ç—å –≤ HTML –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã.
      
    - –ü—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —Å—Å—ã–ª–∫–∏ –≤ –ø–æ–ª–µ —Ñ–æ—Ä–º—ã –∏ –Ω–∞–∂–∞—Ç–∏–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É "–î–æ–±–∞–≤–∏—Ç—å", –ø—Ä–æ–∏—Å—Ö–æ–¥—è—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏:
        * –Ω–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –∑–∞–∫–ª–∞–¥–∫–∏ —Å —Ç–∞–∫–æ–π —Å—Å—ã–ª–∫–æ–π –≤ —Ç–µ–∫—É—â–µ–π –∫–æ–ª–ª–µ–∫—Ü–∏–∏ –∑–∞–∫–ª–∞–¥–æ–∫. –ï—Å–ª–∏ —Ç–∞–∫–∞—è –∑–∞–∫–ª–∞–¥–∫–∞ –µ—Å—Ç—å,
          –≤—Å–ø–ª—ã–≤–∞–µ—Ç –¥–∏–∞–ª–æ–≥–æ–≤–æ–µ –æ–∫–Ω–æ –æ–ø–æ–≤–µ—â–∞—é—â–µ–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ —Ç–æ–º, —á—Ç–æ —Ç–∞–∫–∞—è –∑–∞–∫–ª–∞–¥–∫–∞ —É–∂–µ –µ—Å—Ç—å.
        * –ø—Ä–∏ —É—Å–ª–æ–≤–∏–∏ –≤–∞–ª–∏–¥–Ω–æ–π, –µ—â–µ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–π –≤ –∫–æ–ª–ª–µ–∫—Ü–∏–∏ —Å—Å—ã–ª–∫–∏, –∫–∞—Ä—Ç–æ—á–∫–∞ —Å —Ç–∞–∫–æ–π —Å—Å—ã–ª–∫–æ–π
          –¥–æ–±–∞–≤–ª—è–µ—Ç—Å—è –≤ –∫–æ–ª–ª–µ–∫—Ü–∏—é.
          
    - –í –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–µ, –Ω–æ–≤—ã–µ –∫–∞—Ä—Ç–æ—á–∫–∏ –¥–æ–±–∞–≤–ª—è—é—Ç—Å—è –Ω–∞–≤–µ—Ä—Ö —Å–ø–∏—Å–∫–∞, –∞ –Ω–µ –≤–Ω–∏–∑.
    
    - –ö–∞–∂–¥–∞—è –∫–∞—Ä—Ç–æ—á–∫–∞-–∑–∞–∫–ª–∞–¥–∫–∞ —Å–æ–¥–µ—Ä–∂–∏—Ç –∫–Ω–æ–ø–∫—É –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –∫–∞—Ä—Ç–æ—á–∫–∏ –∏–∑ –∫–æ–ª–ª–µ–∫—Ü–∏–∏, –ø—Ä–∏ –∫–ª–∏–∫–µ 
      –Ω–∞ –∫–Ω–æ–ø–∫—É –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç —É–¥–∞–ª–µ–Ω–∏–µ.
      
    - –ü—Ä–∏ –ø–æ–≤—Ç–æ—Ä–Ω–æ–º –ø–æ—Å–µ—â–µ–Ω–∏–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Å –æ–¥–Ω–æ–≥–æ –∏ —Ç–æ–≥–æ –∂–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ –∏ –±—Ä–∞—É–∑–µ—Ä–∞, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–∏–¥–∏—Ç
      –≤—Å–µ –∫–∞—Ä—Ç–æ—á–∫–∏-–∑–∞–∫–ª–∞–¥–∫–∏ –∫–æ—Ç–æ—Ä—ã–µ –±—ã–ª–∏ –≤–æ –≤—Ä–µ–º—è –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –µ–≥–æ –ø–æ—Å–µ—â–µ–Ω–∏—è. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ localStorage
      
  üîî –û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω–æ–µ
*/

/*
  ‚ö†Ô∏è –ó–ê–î–ê–ù–ò–ï –ü–û–í–´–®–ï–ù–ù–û–ô –°–õ–û–ñ–ù–û–°–¢–ò - –í–´–ü–û–õ–ù–Ø–¢–¨ –ü–û –ñ–ï–õ–ê–ù–ò–Æ
  
    - –ü—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —Å—Å—ã–ª–∫–∏ –≤ –ø–æ–ª–µ —Ñ–æ—Ä–º—ã –∏ –Ω–∞–∂–∞—Ç–∏–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É "–î–æ–±–∞–≤–∏—Ç—å", –ø—Ä–æ–∏—Å—Ö–æ–¥–∏ –ø—Ä–æ–≤–µ—Ä–∫–∞ 
      –Ω–∞ –≤–∞–ª–∏–¥–Ω–æ—Å—Ç—å –≤–≤–µ–¥–µ–Ω–Ω–æ–π —Å—Å—ã–ª–∫–∏: –µ—Å–ª–∏ –±—ã–ª –≤–≤–µ–¥–µ–Ω –Ω–µ–≤–∞–ª–∏–¥–Ω—ã–π url —Ç–æ –¥–æ–ª–∂–Ω–æ –≤—Å–ø–ª—ã–≤–∞—Ç—å 
      –¥–∏–∞–ª–æ–≥–æ–≤–æ–µ –æ–∫–Ω–æ, –æ–ø–æ–≤–µ—â–∞—é—â–µ–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ —Ç–æ–º, —á—Ç–æ —ç—Ç–æ –Ω–µ–≤–∞–ª–∏–¥–Ω—ã–π url. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ
      —Ä–µ–≥—É–ª—è—Ä–Ω—ã–µ –≤—ã—Ä–∞–∂–µ–Ω–∏—è –¥–ª—è –≤–∞–ª–∏–¥–∞—Ü–∏–∏ url.
          
    - –ö–∞–∂–¥–∞—è –∫–∞—Ä—Ç–æ—á–∫–∞ —Å–æ–¥–µ—Ä–∂–∏—Ç –ø—Ä–µ–≤—å—é –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏ –±–∞–∑–æ–≤—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å—Ç—Ä–∞–Ω–∏—Ü–µ –ø–æ –∞–¥—Ä–µ—Å—É –∑–∞–∫–ª–∞–¥–∫–∏,
      –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —ç—Ç–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å —ç—Ç–∏–º Rest API - https://www.linkpreview.net/
*/


let cardsArr = []; 
// –∫–∞–∂–¥—ã–π —Ä–∞–∑ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –∏–ª–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –∫–∞—Ä—Ç–æ—á–∫–∏ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –ø–µ—Ä–µ–∑–∞–ø–∏—Å—å –º–∞—Å—Å–∏–≤–∞ –∑–∞–∫–ª–∞–¥–æ–∫ –≤ LocalStorage.

const input = document.querySelector('.form__input')
const addCard = document.querySelector('.form__submit');
const form = document.querySelector('.form')

const divWrap = document.querySelector('.wrapper');
let inputValue;
 
// console.log(cardsArr)
let regExp = /^[a-z]{1,}\.[a-z]{1,}\.?\w{1,}([a-zA-Z0-9]{1,}|.?)?/
console.log(regExp);


// —Ñ—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤–∞–ª–∏–¥–Ω–æ—Å—Ç–∏ –≤–≤–µ–¥–µ–Ω–æ–≥–æ –∞–¥—Ä–µ—Å–∞
function isUrlValid (event) {
  event.preventDefault()
  let a = input.value
  if (input.value.length === 0) {
    alert ('Please enter url before adding card.')
  } else if(regExp.test(a)) {
    getInfoAboutLink(event)
  } else {
    alert('Url is invalid! Enter valid url, please.')
  }
}


// —Ñ—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∑–∞–ø—Ä–æ—Å –Ω–∞ —Å–µ—Ä–≤–µ—Ä.
function getInfoAboutLink (ev) {
  ev.preventDefault()
  fetch(`https://api.linkpreview.net/?key=5bfda7235645423745dd9b252ba856cdd795b606a47ea&q=https://www.${input.value}`)
  .then(response => response.json())
  .then(data => addLinkToArr(data))
  .catch(err => console.log(err))
}
addCard.addEventListener('click', isUrlValid);

// —Ñ—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –æ—Ç–≤–µ—Ç –∏, –µ—Å–ª–∏ —Ç–∞–∫–æ–π –∞–¥—Ä–µ—Å —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –¥–æ–±–∞–≤–ª—è–µ—Ç –∫–∞—Ä—Ç–æ—á–∫—É –≤ –º–∞—Å—Å–∏–≤.
function addLinkToArr (data) {
  console.log(data)
  if (data.error === 424) {
    alert (`Sorry, my app can't create card without info from server. Please enter another url. Error: ${data.description}`)
    form.reset()
  } else {
    form.reset();
    let obj = {
      url: data.url,
      title: data.title,
      image: data.image,
      description: data.description,
    }
    // –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –∑–∞–∫–ª–∞–¥–∫–∏ –≤ –º–∞—Å—Å–∏–≤–µ.
    if (cardsArr.length > 0) {
        let arr = cardsArr.map(el => el.description);
        if (!arr.includes(obj.description)){
          cardsArr.push(obj);
          createCard(data);
          localStorage.setItem(`arrCards`, JSON.stringify(cardsArr)) 
        } else {
          alert ('Card already exist! Please enter another url.')
        }
    } else {
      cardsArr.push(obj);
      createCard(data);
      localStorage.setItem(`arrCards`, JSON.stringify(cardsArr))
    }
  }
}

// —Ñ—É–Ω–∫—Ü–∏—è —Å –ø–æ–º–æ—â—å—é —à–∞–±–ª–æ–Ω–∏–∑–∞—Ç–æ—Ä–∞ –æ—Ç—Ä–∏—Å–æ–≤—ã–≤–µ—Ç –∫–∞—Ä—Ç–æ—á–∫—É –Ω–∞ —ç–∫—Ä–∞–Ω–µ.
function createCard(obj) {
  const source = document.querySelector("#cards-template").innerHTML.trim();
  const template = Handlebars.compile(source);
  const mark = template(obj);
  divWrap.insertAdjacentHTML('afterbegin', mark)
}

// —Ñ—É–Ω–∫—Ü–∏—è —É–¥–∞–ª—è–µ—Ç –∫–∞—Ä—Ç–æ—á–∫–∏ –∏–∑ —Å–ø–∏—Å–∫–∞ –∑–∞–∫–ª–∞–¥–æ–∫ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–Ω—ã—Ö –Ω–∞ —ç–∫—Ä–∞–Ω–µ –∏ –∏–∑ –º–∞—Å—Å–∏–≤–∞ –≤—Å–µ—Ö –∑–∞–∫–ª–∞–¥–æ–∫.
function removeCard(event) {
  if (event.target.className === 'delete') {
    cardsArr = cardsArr.filter(el => el.url !== [...event.target.parentNode.children][2].children[0].href)
    event.target.parentNode.remove()
    localStorage.setItem(`arrCards`, JSON.stringify(cardsArr))
  }
}
divWrap.addEventListener('click', removeCard)


// –ø—Ä–∏ –∑–∞–∫—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –ø—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å—Ç—å –ª–∏ —É –Ω–∞—Å –∑–∞–∫–ª–∞–¥–∫–∏ –≤ LocalStorage
function isLocalStorageFull () {
  if (localStorage.getItem('arrCards') !== null) {
    createCardsFromLocalStorage()
  }
}

// –µ—Å–ª–∏ –≤ LocalStorage e—Å—Ç—å –º–∞—Å—Å–∏–≤ —Å –∫–∞—Ä—Ç–æ—á–∫–∞–º–∏ - –∑–∞–ø–∏—Å—ã–≤–∞–µ–º –µ–≥–æ –≤ –Ω–∞—à—É –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é-–º–∞—Å—Å–∏–≤ –∏ –æ—Ç—Ä–∏—Å–æ–≤—ã–≤–∞–µ–º –∫–∞—Ä—Ç–æ—á–∫–∏
function createCardsFromLocalStorage () {
  cardsArr = JSON.parse(localStorage.getItem('arrCards'));
  cardsArr.map(el => createCard(el))
}

window.addEventListener('DOMContentLoaded', isLocalStorageFull)


{
  // –¥—É–º–∞–ª–∞ –∑–∞–º–æ—Ä–æ—á–∏—Ç—å—Å—è —Å http/https, –æ—Ç–ª–æ–∂–∏–ª–∞ —ç—Ç—É –∏–¥–µ—é –≤–≤–∏–¥—É –¥—Ä—É–≥–∏—Ö –∑–∞–¥–∞–Ω–∏–π.
// let checkUrl1 = /^https\:\/\//
// let checkUrl2 = /^http\:\/\//
// let checkUrl3 = /^https\:\/\/www\./
// let checkUrl4 = /^http\:\/\/www\./

// function checkUrl (event) {
//   event.preventDefault()
//   let b = input.value
//   console.log(b)
//   if (checkUrl1.test(b)) {
//     let c = [...b].slice(8)
//     let e = c.join('');
//     inputValue = e;
//     if (regExp.test(e)){
//       getInfoAboutLink()
//     } 
//   } else if (checkUrl2.test(b)) {
//     let c = [...b].slice(7)
//     let e = c.join('');
//     inputValue = e;
//     if (regExp.test(e)){
//       getInfoAboutLink()
//     } 
//   } else if (checkUrl3.test(b)) {
//     let c = [...b].slice(12)
//     let e = c.join('');
//     inputValue = e;
//     if (regExp.test(e)){
//       getInfoAboutLink()
//     } 
//   } else if (checkUrl4.test(b)) {
//     let c = [...b].slice(11)
//     let e = c.join('');
//     inputValue = e;
//     if (regExp.test(e)){
//       getInfoAboutLink()
//     }  
//   } else if (regExp.test(b)){
//     console.log(b)
//     inputValue = b
//     getInfoAboutLink()
//   } 
// }
}